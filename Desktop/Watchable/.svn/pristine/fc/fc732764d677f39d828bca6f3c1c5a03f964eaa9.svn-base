package comcast.test.restAPI.Demo;

import static org.junit.Assert.*;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import java.util.List;
import java.util.Map;

import org.hamcrest.Matcher;
import org.junit.Test;
import org.openqa.selenium.By;

import comcast.test.app.common.userManagement.userLogin.common.UserLoginFunctions;
import comcast.test.config.configServices.DataServiceProperties;
import comcast.test.config.configServices.utils.BaseTest;
import comcast.test.config.configServices.utils.RestAPIServices;
import comcast.test.config.dataServices.subscribeFreeFeaturedChannelFromHome.DS_SubscribeAFreeChannelFromHomeFeatured;
import comcast.test.config.dataServices.vo.VideoDetails;

/** 
 * Class Name: UnsubscribeAHomeFeaturedSubscribedChannel
 * Description: This test case allows a user to unsubscribe the already free subscribed channel  
 * from the 'Featured' section of 'Home' Page by logging into Comcast application.
 */

public class UnsubscribeHomeFeaturedSubscribedChannel extends BaseTest{
	
	  DS_SubscribeAFreeChannelFromHomeFeatured subscribeFreeHomeChannel=new DS_SubscribeAFreeChannelFromHomeFeatured();
	  UserLoginFunctions userLogin=new UserLoginFunctions();
	
	  @Test
	  public void testUnsubscribeAHomeFeaturedSubscribedChannel() throws Exception {
		
		Map<String, List<VideoDetails>> videoDetails=RestAPIServices.HomeFeaturedAPI();
		List<VideoDetails> showList=videoDetails.get("show");
		  
		//This method registers new user and subscribe a free channel For Home Featured
		subscribeFreeHomeChannel.RegisterAndSubscribeAFreeChannelHomeFeatured();

		//This method is used to enter user name and password credential
		userLogin.UserLoginCredentials(driver);
		
		driver.findElement(By.id("user_login")).click();
		
	    driver.findElement(By.linkText("Subscriptions")).click();
	    
    	driver.findElement(By.linkText(showList.get(0).getTitle())).click();

	    assertTrue(driver.findElement(By.cssSelector("BODY")).getText().matches("^[\\s\\S]*"+showList.get(0).getTitle()+"[\\s\\S]*$"));
	    
	    driver.findElement(By.cssSelector("a.subscribe > span.translation_missing")).click();
	    
	    driver.findElement(By.cssSelector("fieldset > input[type=\"submit\"]")).click();
	    
	    Thread.sleep(sleepTime);
	    assertEquals("You have been unsubscribed.", driver.findElement(By.xpath(".//*[@id='cluetip']/div[1]/div/div[2]/div")).getText());
	   
	    driver.findElement(By.linkText("Subscriptions")).click();
	    
	    driver.findElement(By.linkText(showList.get(0).getTitle())).click();
	    
	    Thread.sleep(sleepTime);	    
	    assertFalse(driver.findElement(By.cssSelector("BODY")).getText().matches("^[\\s\\S]*Unsubscribe[\\s\\S]*$"));
	    
	    Thread.sleep(sleepTime);
	    driver.findElement(By.linkText("Log Out")).click();
	}
}
