package comcast.test.app.testCases.videoManagement.videoHomeManagement.FeaturedCategoryTestCases.ShowTestCases;

import static org.junit.Assert.assertTrue;

import java.util.List;
import java.util.Map;

import org.junit.Test;
import org.openqa.selenium.By;

import comcast.test.app.common.AssertionRepo.common.AssertionRepoFunctions;
import comcast.test.app.common.constant.XidioConstant;
import comcast.test.app.common.userManagement.userLogin.common.UserLoginFunctions;
import comcast.test.app.common.videoManagement.homePage.common.HomePageCommonFunctions;
import comcast.test.config.configServices.utils.BaseTest;
import comcast.test.config.configServices.utils.RestAPIServices;
import comcast.test.config.dataServices.registerToXidioApplicationAndChangeAPassword.RegisterToXidioApplicationAndChangeAPassword;
import comcast.test.config.dataServices.vo.VideoDetails;

/** 
 * Class Name: VerifyVideosAreDisplayedUnderHomeFeaturedShows
 * Description: This test case is to verify if the videos available
 * for a Show are displayed under 'Featured' section on 'Home' screen
 * by logging into Watchable application.
 */

public class VerifyVideosAreDisplayedUnderHomeFeaturedShows extends BaseTest{
	
	RegisterToXidioApplicationAndChangeAPassword RegUserAndChangePass=new RegisterToXidioApplicationAndChangeAPassword();
	HomePageCommonFunctions homePageCommonFun=new HomePageCommonFunctions();
	UserLoginFunctions userLogin=new UserLoginFunctions();
	AssertionRepoFunctions assertionFunction=new AssertionRepoFunctions();
	
	@Test
	public void testVerifyVideosAreDisplayedUnderHomeFeaturedShows() throws Exception {
		
		Map<String, List<VideoDetails>> videoDetails=RestAPIServices.nHomeFeaturedAPI();
		List<VideoDetails> showList=videoDetails.get("featuredShowList");
		List <VideoDetails> videoList=videoDetails.get("subShowVideos");

		try{
			/* This Method is to register new user using Watchable application 
			 * and to change a password. 
			 */
			RegUserAndChangePass.RegisterToComcastAppAndChangePassword(driver);
			
			//This method is to ensure Home is Active page when Login into Application.
			assertionFunction.assertHomeActiveLink();
			
			//This method is to assert Watchable Top Middle Menu and to ensure its collapsed.
		//	assertionFunction.assertGazeeboTopMiddleMenu();
			
			//This method asserts featured title.
			assertionFunction.assertFeaturedTitle();
	
			if(showList!=null)
			{
				//This Method verifies Show present in Home Featured list and selects a Show. 
			    homePageCommonFun.selectHomeFeaturedShow(showList.get(XidioConstant.selectShow).getTitle());
			    
			    assertTrue(driver.findElement(By.cssSelector("BODY")).getText().matches("^[\\s\\S]*"+showList.get(XidioConstant.selectShow).getTitle()+"[\\s\\S]*$"));
			    if(videoList!=null)
			    {
			    	int loopMaxIndex=0;
					if(videoList.size()<2)
						loopMaxIndex=videoList.size();
					else
						loopMaxIndex=2;
					
			    		for(int index=0; index<loopMaxIndex; index++)
			    		{
			    			VideoDetails videos=videoList.get(index);
			    			//Lekshmi : Changed Object identifier to fetch the video title
			    			int position = index+1;
			    			String videoTitle = driver.findElement(By.xpath("//li[contains(@class,'cell-episode')][" + position +"]/descendant::h1/a")).getText();
			    			//assertTrue(driver.findElement(By.cssSelector("BODY")).getText().matches("^[\\s\\S]*"+videos.getTitle()+"[\\s\\S]*$"));
			    			assertTrue(videoTitle.equalsIgnoreCase(videos.getTitle()));
			    		}
			    	}
			    }
		    
		    //This method is used to logout from Watchable Application.
		    userLogin.LogOut(driver);
		    
		    //This method is to ensure Login page is displayed when user Sign Out from Application.
		    assertionFunction.assertLoginPageDetails(); 
		} 
		catch (Throwable t) {
			captureScreenshot();
			collector.addError(t);
		}
	}
}
