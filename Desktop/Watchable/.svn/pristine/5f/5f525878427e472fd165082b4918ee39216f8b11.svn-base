package comcast.test.app.testCases.playLists;

import static org.junit.Assert.assertTrue;

import org.junit.Test;
import org.openqa.selenium.By;

import comcast.test.app.common.UILablesRepo;
import comcast.test.app.common.XpathObjectRepo;
import comcast.test.app.common.AssertionRepo.common.AssertionRepoFunctions;
import comcast.test.app.common.commonFunctions.CommonFun;
import comcast.test.app.testCases.playLists.playListsFunctions.PlayListsFun;
import comcast.test.config.configServices.DataServiceProperties;
import comcast.test.config.configServices.utils.BaseTest;

/**
 * Class Name: VerifyPlayListSharingSendWithInvalidFromEmail Description: This
 * test script verifies clicking on send button from play list sharing pop up
 * window by entering invalid from email address displaying error message for
 * from email fields. Author: Manoj
 * **/

public class VerifyPlayListSharingSendWithInvalidFromEmail extends BaseTest {
	AssertionRepoFunctions assertionFunction = new AssertionRepoFunctions();

	@Test
	public void testVerifyPlayListSharingSendWithInvalidFromEmail()
			throws Exception {

		try {

			log.info("Script: VerifyPlayListSharingSendWithInvalidFromEmail");
			log.info("************************************************");

			// Navigate to the Home page of the application
			driver.get(DataServiceProperties.HOMEAPPURL);

			// Verify application is opened successfully.
			AssertionRepoFunctions.assertWatchableTitle();
			log.info("Successfully opened the application");

			Thread.sleep(sleepTime);

			// Verify Play List menu is present
			assertTrue(
					"Play Lists menu is not present",
					CommonFun.isElementPresent(driver,
							By.xpath(XpathObjectRepo.playLists_XPATH)));
			log.info("Play Lists menu is present");

			// Click on 'PLAYLISTS' menu
			PlayListsFun.clickOnPlaylistsMenu();

			// Verify All Play Lists page title
			AssertionRepoFunctions.assertAllPlayListsPageTitle();
			int playListCount = driver.findElements(
					By.xpath(XpathObjectRepo.allPlaylistsIcon_XPATH)).size();
			if (playListCount > 0) {

				// Verify Watch link in Play List
				assertTrue(
						"Watch link not present in play list",
						CommonFun.isElementPresent(driver, By
								.xpath(XpathObjectRepo.playlistWatchLink_XPATH)));
				log.info("Watch link present in play list");

				// Click on Watch link
				PlayListsFun.clickOnWatchLinkFromPlayList();

				// Verify Video page title
				AssertionRepoFunctions.assertVideoPageTitleFromPlayList();
				log.info("The Video page title displayed after navigating from play list is '"
						+ driver.getTitle() + "'");

				// Verify video player is displayed in video page
				AssertionRepoFunctions.assertVideoPlayer();

				// Verify Play List share button
				assertTrue(
						"Play List share button not present in play list",
						CommonFun.isElementPresent(
								driver,
								By.xpath(XpathObjectRepo.playlistShareButton_XPATH)));
				log.info("Play List share button present in play list");

				// Mouse over Play List share button
				CommonFun.mouseOverElement(driver, driver.findElement(By
						.xpath(XpathObjectRepo.playlistShareButton_XPATH)));

				// Verify Play list Email Share button share option
				assertTrue(
						"Email button not present in play list share option",
						CommonFun.isElementPresent(driver,
								By.id(XpathObjectRepo.playlistShareEmail_ID)));
				log.info("Email button present in play list share option");

				Thread.sleep(LessSleepTime);

				// Click on Play list Email Share button
				PlayListsFun.clickOnPlayListEmailShareButton();

				// Verify Play List Email sharing pop up window is displayed
				assertTrue(
						"Play List Email sharing pop up window is not displayed after clicking on Email button",
						CommonFun.isElementPresent(
								driver,
								By.xpath(XpathObjectRepo.playlistemailShareForm_XPATH)));

				log.info("Play List Email sharing pop up window is displayed after clicking on Email button");

				// Enter invalid From & To Email address
				PlayListsFun
						.emterFromToEmailAddress(
								UILablesRepo.INVALID_FORMAT_EMAIL,
								UILablesRepo.NEWUSER);
				// Click on send button
				PlayListsFun.clickonEmailFormSendButton();

				// Verify error message is displayed for from email address
				assertTrue(
						"Error message is not displayed for from email address",
						CommonFun.isElementPresent(
								driver,
								By.xpath(XpathObjectRepo.playlistPopupFromEmailErrMsg_XPATH)));
				log.info("The Error message '"
						+ driver.findElement(
								By.xpath(XpathObjectRepo.playlistPopupFromEmailErrMsg_XPATH))
								.getText()
						+ "' displayed for From email address");

				log.info("");
			} else {
				log.info("Play Lists does NOT contains Play list");
			}

		} catch (Throwable t) {
			captureScreenshot();
			collector.addError(t);
		}
	}

}
