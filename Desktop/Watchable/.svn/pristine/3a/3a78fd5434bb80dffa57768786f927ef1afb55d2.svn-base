package comcast.test.app.testCases.videoManagement.videoHomeManagement.PopularChannelsCategoryTestCases.PopularChannelCategoryPageTestCases;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.util.List;
import java.util.Map;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;

import comcast.test.app.common.XpathObjectRepo;
import comcast.test.app.common.AssertionRepo.common.AssertionRepoFunctions;
import comcast.test.app.common.userManagement.userLogin.common.UserLoginFunctions;
import comcast.test.app.common.videoManagement.homePage.common.HomePageCommonFunctions;
import comcast.test.config.configServices.DataServiceProperties;
import comcast.test.config.configServices.utils.BaseTest;
import comcast.test.config.configServices.utils.RestAPIServices;
import comcast.test.config.dataServices.registerToXidioApplicationAndChangeAPassword.RegisterToXidioApplicationAndChangeAPassword;
import comcast.test.config.dataServices.vo.VideoDetails;

/**
 * Class Name: VerifyAllHomePopularChannelsAreDisplayed Description: This test
 * case is to verify Home/Popular Channels category all channels are displayed
 * and its clickable by comparing with API response for registered Watchable
 * Application user. Note: Need clarification from client for sorting
 * functionality.
 * **/

public class VerifyAllHomePopularChannelsAreDisplayed extends BaseTest {

	RegisterToXidioApplicationAndChangeAPassword RegUserAndChangePass = new RegisterToXidioApplicationAndChangeAPassword();
	AssertionRepoFunctions assertionFunction = new AssertionRepoFunctions();
	UserLoginFunctions userLogin = new UserLoginFunctions();
	HomePageCommonFunctions homePageCommonFun = new HomePageCommonFunctions();

	@Test
	public void testVerifyAllHomePopularChannelsAreDisplayed() throws Exception {

		Map<String, List<VideoDetails>> videoDetails = RestAPIServices
				.allPopularChannelsList();
		List<VideoDetails> popularChannelsList = videoDetails
				.get("popularChannelsList");

		try {
			
			// Opening application
			driver.get(DataServiceProperties.HOMEAPPURL);
			Thread.sleep(sleepTime);

			// This method is to ensure Home is Active page when Login into
			// Application.
			assertionFunction.assertHomeActiveLink();

			// This method asserts Popular Channels title.
			assertionFunction.assertPopularChannelsTitle();

			// This method is to scroll UI to Popular Channels Section.
			homePageCommonFun.scrollToPopularChannelsSection();

			if (popularChannelsList != null) {
				int loopMaxIndex = 0;
				if (popularChannelsList.size() < 20)
					loopMaxIndex = popularChannelsList.size();
				else
					loopMaxIndex = 20;

				int channelListSize = driver
						.findElements(
								By.xpath(XpathObjectRepo.HOMEPOPULARCHANNELSLIST_XPATH))
						.size();
				for (int j = 1; j <= channelListSize; j++) {
					// WebElement ele=
					// driver.findElement(By.xpath("//div[@id='popular_channels']/descendant::li[contains(@class,'cell-channel')]["+j+"]/descendant::h1/a"));
					WebElement ele = driver
							.findElement(By
									.xpath(XpathObjectRepo.HOMEPOPULARCHANNELS_SUBTITLABEL_XPATH
											+ "[" + j + "]"));

					assertTrue(ExpectedConditions.elementToBeClickable(ele) != null);

				}
				
			} else {
				boolean isPresent;
				// Lekshmi : Changed Object identifier
				isPresent = driver
						.findElement(
								By.xpath(XpathObjectRepo.HOMEPOPULARCHANNELSROW_XPATH))
						.findElements(
								By.xpath(XpathObjectRepo.HOMEPOPULARCHANNELSFIRSTTITLELABEL_XPATH))
						.size() > 0;
				if (isPresent == true) {
					String channelName = driver
							.findElement(
									By.xpath(XpathObjectRepo.HOMEPOPULARCHANNELSROW_XPATH))
							.findElement(
									By.xpath(XpathObjectRepo.HOMEPOPULARCHANNELSFIRSTTITLELABEL_XPATH))
							.getText();
					// Lekshmi : Change the object identifier
					// assertFalse(driver.findElement(By.cssSelector("BODY")).getText().matches("^[\\s\\S]*"+channelName+"[\\s\\S]*$"));
					assertFalse(driver
							.findElement(
									By.xpath(XpathObjectRepo.HOMEPOPULARCHANNELSFIRSTTITLELABEL_XPATH))
							.getText().equalsIgnoreCase(channelName));
				}
			}

			// This method asserts Footer Logo and It's Text.
			assertionFunction.assertFooterLogo();

			// This method asserts Footer Copy Right Links.
			assertionFunction.assertFooterCopyRight();

		} catch (Throwable t) {
			captureScreenshot();
			collector.addError(t);
		}
	}
}
