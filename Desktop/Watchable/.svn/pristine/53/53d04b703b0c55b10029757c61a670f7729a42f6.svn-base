package comcast.test.app.testCases.videoManagement.videoHomeManagement.PopularChannelsCategoryTestCases.PopularChannelCategoryPageTestCases;

import static org.junit.Assert.assertTrue;

import java.util.List;
import java.util.Map;

import org.junit.Test;
import org.openqa.selenium.By;

import comcast.test.app.common.UILablesRepo;
import comcast.test.app.common.XpathObjectRepo;
import comcast.test.app.common.AssertionRepo.common.AssertionRepoFunctions;
import comcast.test.app.common.constant.XidioConstant;
import comcast.test.app.common.userManagement.userLogin.common.UserLoginFunctions;
import comcast.test.app.common.videoManagement.homePage.common.HomePageCommonFunctions;
import comcast.test.config.configServices.utils.BaseTest;
import comcast.test.config.configServices.utils.RestAPIServices;
import comcast.test.config.dataServices.registerToXidioApplicationAndChangeAPassword.RegisterToXidioApplicationAndChangeAPassword;
import comcast.test.config.dataServices.vo.VideoDetails;

/**
 * Class Name: VerifyVideosAndNextLinkInHomePopularChannelsPage Description:
 * This test case validates whether particular set of videos is displayed in
 * channels page under Popular Channels section and next link works fine in Home
 * page by logging registered user into Watchable application.
 * **/

public class VerifyVideosAndNextLinkInHomePopularChannelsPage extends BaseTest {

	RegisterToXidioApplicationAndChangeAPassword RegUserAndChangePass = new RegisterToXidioApplicationAndChangeAPassword();
	HomePageCommonFunctions homePageCommonFun = new HomePageCommonFunctions();
	UserLoginFunctions userLogin = new UserLoginFunctions();
	AssertionRepoFunctions assertionFunction = new AssertionRepoFunctions();

	@Test
	public void testVerifyVideosAndNextLinkInHomePopularChannelsPage()
			throws Exception {

		Map<String, List<VideoDetails>> videoDetails = RestAPIServices
				.nPopularAPI();
		List<VideoDetails> channelList = videoDetails
				.get("popularChannelsList");

		try {
			/*
			 * This Method is to register new user using Watchable application
			 * and to change a password.
			 */
			RegUserAndChangePass.RegisterToComcastAppAndChangePassword(driver);
			int loginError = driver
					.findElements(
							By.xpath(XpathObjectRepo.SIGNUPPAGE_INCORRECT_CREDENTIALS_MSG_XPATH))
					.size();

			if (loginError == 0) {

				// This method is to ensure Home is Active page when Login into
				// Application.
				assertionFunction.assertHomeActiveLink();
				
				Thread.sleep(sleepTime);
				// Manoj: Objects modified and added to XpathObjectRepo file

				/*
				 * assertTrue(driver.findElement(By.cssSelector("BODY")).getText(
				 * ) .matches("^[\\s\\S]*Popular Channels[\\s\\S]*$"));
				 */
				assertTrue(driver
						.findElement(
								By.xpath(XpathObjectRepo.HOMEPOPULARCHANNELSTITLELABEL_XPATH))
						.getText()
						.matches(UILablesRepo.HOMEPAGE_FEATUREDCHANNELS));

				assertTrue(driver
						.findElement(
								By.xpath(XpathObjectRepo.HOMEPOPULARCHANNELSFIRSTTITLELABEL_XPATH))
						.getText()
						.matches(
								channelList.get(
										XidioConstant.selectPopularChannel)
										.getTitle()));

				boolean isNextPresent = false;
				boolean isPrevPresent = false;
				int count = 0;
				do {
					// This method is to scroll UI to Popular Channels Section.
					homePageCommonFun.scrollToPopularChannelsSection();

					// Manoj: Objects modified and added to XpathObjectRepo file
					/*
					 * String isNextEnable = driver .findElement(
					 * By.xpath("//*[@id='popular_channels']/div/section/a[2]"))
					 * .getAttribute("class");
					 */

					String isNextEnable = driver
							.findElement(
									By.xpath(XpathObjectRepo.HOMEPOPULARCHANNELSBUTTONNEXT_XPATH))
							.getAttribute("class");

					if (!isNextEnable.equalsIgnoreCase("next hidden")
							&& !isNextEnable.equalsIgnoreCase("next disabled")) {
						isNextPresent = true;
						count++;
						/*
						 * driver.findElement(
						 * By.xpath("//*[@id='popular_channels']/div/section/a[2]"
						 * )) .click();
						 */
						driver.findElement(
								By.xpath(XpathObjectRepo.HOMEPOPULARCHANNELSBUTTONNEXT_XPATH))
								.click();

						// This method asserts Gazeebo Logo.
						assertionFunction.assertWatchableLogo();

						assertTrue(driver
								.findElement(
										By.xpath(XpathObjectRepo.YOUAREWATCHINGHEADERLABEL_XPATH))
								.getText()
								.matches(UILablesRepo.HOMEPAGE_YOUAREWATCHING));
						assertTrue(driver
								.findElement(
										By.xpath(XpathObjectRepo.HOMEFEATUREDCONTAINERLABEL_XPATH))
								.getText()
								.matches(UILablesRepo.HOMEPAGE_FEATURED));
						assertTrue(driver
								.findElement(
										By.xpath(XpathObjectRepo.HOMEPOPULARSHOWSTITLELABEL_XPATH))
								.getText()
								.matches(UILablesRepo.HOMEPAGE_POPULARSHOWS));
						assertTrue(driver
								.findElement(
										By.xpath(XpathObjectRepo.HOMEPOPULARCHANNELSTITLELABEL_XPATH))
								.getText()
								.matches(UILablesRepo.HOMEPAGE_FEATUREDCHANNELS));

						// This method asserts Help link.
						assertionFunction.assertHelpLink();

						// This method asserts Search Text Box and its value.
						assertionFunction.assertSearchTextBox();
					}

				} while (isNextPresent && count > 3);
				do {

					// Manoj: Objects modified and added to XpathObjectRepo file
					/*
					 * String isPreviousEnable = driver .findElement(
					 * By.xpath("//*[@id='popular_channels']/div/section/a[1]"))
					 * .getAttribute("class");
					 */

					String isPreviousEnable = driver
							.findElement(
									By.xpath(XpathObjectRepo.HOMEPOPULARCHANNELSBUTTONPREVIOUS_XPATH))
							.getAttribute("class");

					if (!isPreviousEnable
							.equalsIgnoreCase("prev disabled hidden")
							&& !isPreviousEnable
									.equalsIgnoreCase("prev disabled")) {
						isPrevPresent = true;
						count--;
						/*
						 * driver.findElement( By.xpath(
						 * "//*[@id='popular_channels']/div/section/a[1]/span"))
						 * .click();
						 */

						driver.findElement(
								By.xpath(XpathObjectRepo.HOMEPOPULARCHANNELSBUTTONPREVIOUS_XPATH))
								.click();

						Thread.sleep(sleepTime);
	

						assertTrue(driver
								.findElement(
										By.xpath(XpathObjectRepo.HOMEPOPULARCHANNELSROW_XPATH))
								.getText()
								.contains(
										driver.findElement(
												By.xpath(XpathObjectRepo.HOMEPOPULARCHANNELSFIRSTTITLELABEL_XPATH))
												.getText()));

						assertTrue(driver
								.findElement(
										By.xpath(XpathObjectRepo.YOUAREWATCHINGHEADERLABEL_XPATH))
								.getText()
								.matches(UILablesRepo.HOMEPAGE_YOUAREWATCHING));
						assertTrue(driver
								.findElement(
										By.xpath(XpathObjectRepo.HOMEFEATUREDCONTAINERLABEL_XPATH))
								.getText()
								.matches(UILablesRepo.HOMEPAGE_FEATURED));
						assertTrue(driver
								.findElement(
										By.xpath(XpathObjectRepo.HOMEPOPULARSHOWSTITLELABEL_XPATH))
								.getText()
								.matches(UILablesRepo.HOMEPAGE_POPULARSHOWS));
						assertTrue(driver
								.findElement(
										By.xpath(XpathObjectRepo.HOMEPOPULARCHANNELSTITLELABEL_XPATH))
								.getText()
								.matches(UILablesRepo.HOMEPAGE_FEATUREDCHANNELS));

					}
				} while (isPrevPresent && count > 0);

				// This method asserts Footer Logo and It's Text.
				assertionFunction.assertFooterLogo();

				// This method asserts Footer Copy Right Links.
				assertionFunction.assertFooterCopyRight();

				// This method is used to logout from Watchable Application.
				userLogin.LogOut(driver);
			}

			// This method is to ensure Login page is displayed when user Sign
			// Out from Application.
			assertionFunction.assertLoginPageDetails();
		} catch (Throwable t) {
			captureScreenshot();
			collector.addError(t);
		}
	}
}
