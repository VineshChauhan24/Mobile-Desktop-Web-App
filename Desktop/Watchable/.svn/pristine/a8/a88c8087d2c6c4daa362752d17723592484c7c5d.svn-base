package comcast.test.app.testCases.userManagement.userRegistration.UserRegistrationTestCasesForZipCode.UserRegWithNoZipCode;

import static org.junit.Assert.assertTrue;

import org.junit.Test;
import org.openqa.selenium.By;

import comcast.test.config.configServices.DataServiceProperties;
import comcast.test.config.configServices.utils.BaseTest;
import comcast.test.app.common.UILablesRepo;
import comcast.test.app.common.XpathObjectRepo;
import comcast.test.app.common.AssertionRepo.common.AssertionRepoFunctions;
import comcast.test.app.common.userManagement.userRegistration.common.UserRegistrationValidationFuncitons;

/**
 * Class Name: RegisterToWatchableWithoutEnteringZip 
 * Description: This test case registers to Watchable application without entering zip code.
 * **/

public class RegisterToWatchableWithoutEnteringZip extends BaseTest{
	
	UserRegistrationValidationFuncitons userRegValidationFun=new UserRegistrationValidationFuncitons();
	AssertionRepoFunctions assertionFunction=new AssertionRepoFunctions();
	
	@Test
	public void testRegisterToWatchableWithoutEnteringZip() throws Exception {
	  
	    driver.get(DataServiceProperties.APPURL);
	    try{
	    	driver.findElement(By.xpath(XpathObjectRepo.TOPMENUSIGNUP_XPATH)).click();
		    
		    //This method is used to validate zip code.
			userRegValidationFun.validateUserRegistrationFields(driver,proUtil.getProperty(""),proUtil.getProperty("REG_PASSWORD"),proUtil.getProperty("REG_PASSWORD"));
			
			driver.findElement(By.xpath(XpathObjectRepo.LOGINBUTTON_XPATH)).click();
		    
		    Thread.sleep(sleepTime);    
		    assertTrue(driver.findElement(By.xpath(XpathObjectRepo.ACCOUNT_ZIP_EMPTYFLD_MSG_XPATH)).getText().equalsIgnoreCase(UILablesRepo.ACCOUNT_ZIP_EMPTYFLD_MSG));
		    
			//This method asserts Home and My Channels inactive link when user clicks on Bundle/Channel/Show.
			assertionFunction.assertAllInActiveLink();
		   	 	    	   
			//This method asserts Gazeebo Logo.
			assertionFunction.assertWatchableLogo();
			
			//This method is to assert Join Watchable Header in Sign Up page.
			assertionFunction.assertJoinWatchableBanner();
			
		    //This method asserts footer links.
		    assertionFunction.assertFooterCopyRight();
		}
		catch (Throwable t) {
			captureScreenshot();
			collector.addError(t);
		}
  }
}
