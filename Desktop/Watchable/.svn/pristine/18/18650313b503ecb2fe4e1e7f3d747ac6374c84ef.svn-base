package comcast.test.app.testCases.videoManagement.videoPlay.HomeCategoryVideos.FeaturedVideos;

import static org.junit.Assert.assertTrue;

import java.util.List;
import java.util.Map;

import org.junit.Test;
import org.openqa.selenium.By;

import comcast.test.app.common.AssertionRepo.common.AssertionRepoFunctions;
import comcast.test.app.common.constant.XidioConstant;
import comcast.test.app.common.userManagement.userLogin.common.UserLoginFunctions;
import comcast.test.app.common.videoManagement.homePage.common.HomePageCommonFunctions;
import comcast.test.app.common.videoManagement.homePage.common.VideoPlay;
import comcast.test.config.configServices.utils.BaseTest;
import comcast.test.config.configServices.utils.JsonParser;
import comcast.test.config.configServices.utils.RestAPIServices;
import comcast.test.config.configServices.utils.UrlFactoryUtil;
import comcast.test.config.dataServices.registerToXidioApplicationAndChangeAPassword.RegisterToXidioApplicationAndChangeAPassword;
import comcast.test.config.dataServices.vo.VideoDetails;

/**
 * Class Name: PlayFeaturedVideoDisplaysDirectlyUnderChannels
 * Description: This test case play Featured video which displaying directly under Channels 
 * by logging registered user into Gazeebo application.
 * **/

public class PlayFeaturedVideoDisplaysDirectlyUnderChannels extends BaseTest{
	
	RegisterToXidioApplicationAndChangeAPassword RegUserAndChangePass=new RegisterToXidioApplicationAndChangeAPassword();
	HomePageCommonFunctions homePageCommonFun=new HomePageCommonFunctions();
	UserLoginFunctions userLogin=new UserLoginFunctions();
	AssertionRepoFunctions assertionFunction=new AssertionRepoFunctions();
	VideoPlay videoplay=new VideoPlay();
	
	@Test
	public void testPlayFeaturedVideoDisplaysDirectlyUnderChannels() throws Exception {

		Map <String,List<VideoDetails>> videoDetails=RestAPIServices.nFeaturedAPI();
		List <VideoDetails> featuredChannelList=videoDetails.get("featuredChannelsHasOnlyEpisodes");
		String sessionToken=RestAPIServices.executeGenreAuthentication();
		int durationInSeconds=0;
		int durationInMins=0;
		
		try{
			/* This Method is to register new user using Gazeebo application 
			 * and to change a password. 
			 */
			//RegUserAndChangePass.RegisterToComcastAppAndChangePassword(driver);
			
			driver.get(proUtil.getProperty("HOMEAPPURL"));
			Thread.sleep(sleepTime);
			
			//This method is to ensure Home is Active page when Login into Application.
			assertionFunction.assertHomeActiveLink();
			
			//This method is to assert Gazeebo Top Middle Menu and to ensure its collapsed.
			//assertionFunction.assertGazeeboTopMiddleMenu(); //Commenting this line of code as this feacture is not in appn now.
			
			if(featuredChannelList!=null)
			{
				//This Method verifies Channel present in Featured list and selects a Channel. 
				
				//Commenting below verification because Channel not present in FEATURED list
				//homePageCommonFun.selectFeaturedChannel(featuredChannelList.get(XidioConstant.selectFeaturedChannel).getTitle());
				
	    		String  videoResponse =RestAPIServices.getSessionTokenResponse(UrlFactoryUtil.getInstance().getVideoDetailsURL(featuredChannelList.get(XidioConstant.selectFeaturedChannel).getId(),10),sessionToken);
	    		List<VideoDetails> videoList =JsonParser.parseChannelShowsVideosResponse(videoResponse);
	    		
			    //This Method is to navigate Last Updated detail page.
			    //homePageCommonFun.clickOnLastUpdatedLink();
			   
	    		durationInSeconds=videoList.get(XidioConstant.selectVideo).getDuration();
	    		durationInMins=durationInSeconds/60;
	    		
	    		String videoName=videoList.get(XidioConstant.selectVideo).getTitle();
	    		
			    Thread.sleep(sleepTime);
			    assertTrue(driver.findElement(By.cssSelector("BODY")).getText().matches("^[\\s\\S]*"+videoName+"[\\s\\S]*$"));
			    driver.findElement(By.partialLinkText(videoName)).click();
			    
			    //This method is to validate video play functionality.
			    videoplay.videoPlayVerification(durationInMins,videoName);
			}
	 		
		    //This method asserts Gazeebo Logo.
	  		assertionFunction.assertWatchableLogo();

		    //This method asserts Footer Logo and It's Text.
		    assertionFunction.assertFooterLogo();
		    
		    //This method is used to logout from Gazeebo Application.
		    //userLogin.LogOut(driver);
		    
		    //This method is to ensure Login page is displayed when user Sign Out from Application.
		    assertionFunction.assertLoginPageDetails(); 	 
		} 
		catch (Throwable t) {
			captureScreenshot();
			collector.addError(t);
		}
   }
}
