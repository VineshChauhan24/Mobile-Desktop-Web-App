package comcast.test.app.testCases.channelPage;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import org.junit.Test;
import org.openqa.selenium.By;
import comcast.test.app.common.XpathObjectRepo;
import comcast.test.app.common.AssertionRepo.common.AssertionRepoFunctions;
import comcast.test.app.common.commonFunctions.CommonFun;
import comcast.test.app.common.userManagement.userLogin.common.UserLoginFunctions;
import comcast.test.app.common.videoManagement.homePage.common.HomePageCommonFunctions;
import comcast.test.app.testCases.channelPage.channelPageFunctions.ChannelPageFun;
import comcast.test.config.configServices.DataServiceProperties;
import comcast.test.config.configServices.utils.BaseTest;

/**
 * Class Name: VerifyingClickOnChannlFromOtherChannelsSection Description: This
 * test cases verifies clicking on any channel title from other shows section
 * opening show detail page. Author: Manoj
 * **/

public class VerifyingClickOnChannlFromOtherChannelsSection extends BaseTest {

	HomePageCommonFunctions homePageCommonFun = new HomePageCommonFunctions();
	UserLoginFunctions userLogin = new UserLoginFunctions();
	AssertionRepoFunctions assertionFunction = new AssertionRepoFunctions();

	@Test
	public void testVerifyingClickOnChannlFromOtherChannelsSection()
			throws Exception {

		try {

			// Test script
			log.info("Script: VerifyingClickOnChannlFromOtherChannelsSection");
			log.info("******************************************************");

			// Open Application
			driver.get(DataServiceProperties.HOMEAPPURL);
			Thread.sleep(sleepTime);

			// Verify application is opened successfully.
			AssertionRepoFunctions.assertWatchableTitle();
			log.info("Successfully opened the application");

			// This method is to scroll UI to Watchable shows of the week
			// Section.
			HomePageCommonFunctions.scrollToPopularChannelsSection();
			Thread.sleep(sleepTime);

			// Verify shows present inWatchable Watchable shows of the week row

			int channelCount = driver.findElements(
					By.xpath(XpathObjectRepo.featuredChannelsIcon_XPATH))
					.size();
			if (channelCount > 0) {

				// Click on first show from Watchable shows of the week section

				ChannelPageFun.clickOnFirstFeaturedChannelLink();

				// Verify successfully navigate to show details page
				AssertionRepoFunctions.assertChannelPageTitle();

				// This method is to scroll UI to other shows Section.
				ChannelPageFun.scrollToOtherChannelsSection();
				Thread.sleep(sleepTime);
				int otherShowPresent = driver
						.findElements(
								By.xpath(XpathObjectRepo.channelPageOtherSectionTitle_XPATH))
						.size();
				if (otherShowPresent > 0) {

					// Verify other channel section in show detail page
					assertTrue(
							"Other Shows section is not present in Shows detail page",
							CommonFun.isElementPresent(
									driver,
									By.xpath(XpathObjectRepo.channelPageOtherSectionTitle_XPATH)));
					log.info("Other Shows section is present in Shows detail page");

					// Verify show present in other show section
					assertTrue(
							"Shows is not present in other show sectionin Shows detail page",
							CommonFun.isElementPresent(
									driver,
									By.xpath(XpathObjectRepo.channelPageOtherSectionChannelRow_XPATH)));
					log.info("Shows is present in other show section in Shows detail page");

					int otherChannelCount = driver
							.findElements(
									By.xpath(XpathObjectRepo.channelPageOtherSectionChannelIcon_XPATH))
							.size();
					if (otherChannelCount > 0) {

						String channelDetailChannelTitleBefore = driver
								.findElement(
										By.xpath(XpathObjectRepo.channelPageChannelTitle_XPATH))
								.getText();
						// Click on any show from other show section
						ChannelPageFun.clickOnChannelLinkFromOtherChannel();

						// Verify successfully navigate to show details page
						AssertionRepoFunctions.assertChannelPageTitle();

						String channelDetailChannelTitleAfter = driver
								.findElement(
										By.xpath(XpathObjectRepo.channelPageChannelTitle_XPATH))
								.getText();

						// Verify channel details page changed after clicked on
						// channel.

						assertFalse(
								"Shows detail page is not changed with clicked Shows",
								channelDetailChannelTitleBefore
										.contains(channelDetailChannelTitleAfter));

						log.info("Shows detail page is changed from the Shows '"
								+ channelDetailChannelTitleBefore
								+ "' To '"
								+ channelDetailChannelTitleAfter + "'");

					}
				} else {
					log.info("Other show section is NOT present in show detail page of selected show");
				}

				log.info("");

			} else {
				log.error("Shows are not present in Watchable SHOWS OF THE WEEK section in home page");
				log.info("");
			}

		} catch (Throwable t) {
			captureScreenshot();
			collector.addError(t);
		}
	}
}
