package comcast.test.app.testCases.myWatchlist;

import static org.junit.Assert.assertTrue;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;

import comcast.test.app.common.UILablesRepo;
import comcast.test.app.common.XpathObjectRepo;
import comcast.test.app.common.AssertionRepo.common.AssertionRepoFunctions;
import comcast.test.app.common.commonFunctions.CommonFun;
import comcast.test.app.testCases.loginPageAndLogin.loginPageFunctions.LoginFun;
import comcast.test.app.testCases.myWatchlist.myWatchlistFunctions.MyWatchlistFun;
import comcast.test.config.configServices.DataServiceProperties;
import comcast.test.config.configServices.utils.BaseTest;

/**
 * Class Name: VerifyMyWatchlistPageContentWhenVideosNotPresent Description:This
 * test case verifies contents of MY Shows page when video are not present.
 * Author: Manoj
 * **/

public class VerifyMyWatchlistPageContentWhenVideosNotPresent extends BaseTest {
	AssertionRepoFunctions assertionFunction = new AssertionRepoFunctions();

	@Test
	public void testVerifyMyWatchlistPageContentWhenVideosNotPresent()
			throws Exception {

		try {

			log.info("Script: VerifyMyWatchlistPageContentWhenVideosNotPresent");
			log.info("********************************************************");

			// Navigate to the Home page of the application
			driver.get(DataServiceProperties.HOMEAPPURL);

			// Verify application is opened successfully.
			AssertionRepoFunctions.assertWatchableTitle();
			log.info("Successfully opened the application");

			Thread.sleep(sleepTime);

			// Login to Watchable application 
			LoginFun.loginToWatchableApplication(driver, UILablesRepo.NO_WATCHLIST_USER,
					UILablesRepo.PASSWORD);
			WebElement loginError = driver.findElement(By
					.id(XpathObjectRepo.loginError_ID));

			if (loginError.isDisplayed() == false) {

				// Verify My Shows menu is present
				assertTrue(
						"My Shows menu is not present",
						CommonFun.isElementPresent(driver,
								By.xpath(XpathObjectRepo.myWatchlistMenu_XPATH)));
				log.info("My Shows menu is present");

				// Click on My Shows menu
				MyWatchlistFun.clickOnMyWatchlistMenu();

				// Verify user is navigated to My Shows list page
				AssertionRepoFunctions.assertMyWatchlistPageTitle();

				// Verify my Shows list page title
				assertTrue(
						"My Shows menu is not present",
						CommonFun.isElementPresent(
								driver,
								By.xpath(XpathObjectRepo.myWatchlistPageTitle_XPATH)));

				log.info("The title '"
						+ driver.findElement(
								By.xpath(XpathObjectRepo.myWatchlistPageTitle_XPATH))
								.getText()
						+ "' is present in My Shows Page");
				int videoCount = driver.findElements(
						By.xpath(XpathObjectRepo.myWatchlistVideoIcon_XPATH))
						.size();

				if (videoCount == 0) {

					// Verify Not following message displaying when no item in
					// my watchlist
					assertTrue(
							"Not following any Shows message not present when no items present in My Shows",
							CommonFun.isElementPresent(
									driver,
									By.xpath(XpathObjectRepo.myWatchlistPageErrorTitle_XPATH)));

					log.info("The Message '"
							+ driver.findElement(
									By.xpath(XpathObjectRepo.myWatchlistPageErrorTitle_XPATH))
									.getText()
							+ "' is present in My Shows Page when no items present in My Shows");

					// Verify check featured Shows displaying when no item in
					// my watchlist
					assertTrue(
							"Check featured Shows message not present when no items present in My Shows",
							CommonFun.isElementPresent(
									driver,
									By.xpath(XpathObjectRepo.myWatchlistPageErrorSubTitle_XPATH)));

					log.info("The Message '"
							+ driver.findElement(
									By.xpath(XpathObjectRepo.myWatchlistPageErrorSubTitle_XPATH))
									.getText()
							+ "' is present in My Shows Page when no items present in My Shows");

					// Verify Featured channel title displaying when no item in
					// my watchlist
					assertTrue(
							"Featured Shows title not present when no items present in My Shows",
							CommonFun.isElementPresent(
									driver,
									By.xpath(XpathObjectRepo.featuredChannelsTitle_XPATH)));

					log.info("Featured Shows title '"
							+ driver.findElement(
									By.xpath(XpathObjectRepo.featuredChannelsTitle_XPATH))
									.getText()
							+ "' is present in My Shows Page when no items present in My Shows");

					// Verifying Shows present in featured Shows section
					int channelCount = driver
							.findElements(
									By.xpath(XpathObjectRepo.featuredChannelsIcon_XPATH))
							.size();
					if (channelCount > 0) {

						log.info(channelCount
								+ " Shows present in featured Shows section");

						log.info("The following Shows are present in featured Shows section");
						log.info("-----------------------------------------------------");
						for (int i = 1; i <= channelCount; i++) {
							log.info(i
									+ ". "
									+ driver.findElement(
											By.xpath(XpathObjectRepo.featuredChannelTitle_XPATH
													+ i + "]")).getText());

						}
						log.info("");

					} else {
						log.error("Featured Shows row does not contain Shows");
						log.info("");
					}
				}
			}
		}

		catch (Throwable t) {
			captureScreenshot();
			collector.addError(t);
		}

	}
}
