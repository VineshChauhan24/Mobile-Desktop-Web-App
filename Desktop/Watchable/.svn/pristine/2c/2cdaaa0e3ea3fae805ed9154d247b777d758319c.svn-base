package comcast.test.app.testCases.socialSharing;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import org.junit.Test;
import org.openqa.selenium.By;

import comcast.test.app.common.XpathObjectRepo;
import comcast.test.app.common.AssertionRepo.common.AssertionRepoFunctions;
import comcast.test.app.common.commonFunctions.CommonFun;
import comcast.test.app.common.videoManagement.homePage.common.HomePageCommonFunctions;
import comcast.test.app.testCases.playerVideoPage.playerPageFunctions.PlayerPageFun;
import comcast.test.app.testCases.socialSharing.socialSharingFunctions.SocialSharingFun;
import comcast.test.config.configServices.DataServiceProperties;
import comcast.test.config.configServices.utils.BaseTest;

/**
 * Class Name: VerifyEmailSharingFormCloseButton Description: This test script
 * verifies clicking on close button in email sharing pop up window closing the
 * email sharing pop up window. Author: Manoj
 * **/

public class VerifyEmailSharingFormCloseButton extends BaseTest {
	@Test
	public void testVerifyEmailSharingFormCloseButton() throws Exception {

		try {

			// Test script
			log.info("Script: VerifyEmailSharingFormCloseButton");
			log.info("************************************************");

			// Open Application
			driver.get(DataServiceProperties.HOMEAPPURL);
			Thread.sleep(sleepTime);

			// Verify application is opened successfully.
			AssertionRepoFunctions.assertWatchableTitle();
			log.info("Successfully opened the application");

			
			// This method is to scroll UI to Featured Video from featured shows
			// section.
			HomePageCommonFunctions.scrollToVideoSectionFromChannelSection();

			// Verify What we're watching row
			assertTrue(
					"Featured video row is not present in home page",
					CommonFun.isElementPresent(driver,
							By.xpath(XpathObjectRepo.featuredVideosRow_XPATH)));
			log.info("Featured video row is present in home page");

			// Verify Video present in What we're watching row

			int videoCount = driver.findElements(
					By.xpath(XpathObjectRepo.featuredVideosIcon_XPATH)).size();
			if (videoCount > 0) {

				// Click on first video from What we're watching video section
				PlayerPageFun.clickOnFeaturedVideoTitle();

				// Verify User is navigated to video page
				AssertionRepoFunctions.assertVideoPageTitle();

				// Mouse over video player
				PlayerPageFun.mouseOverVideoPlayer();

				// Verify video player is displayed in page
				AssertionRepoFunctions.assertVideoPlayer();

				// Verify Email button in sharing section
				assertTrue(
						"Email button is not present in video control",
						CommonFun.isElementPresent(
								driver,
								By.xpath(XpathObjectRepo.videoControlemailButton_XPATH)));

				log.info("Email button is present in sharing section");

				// Click on Email button from video player controls
				SocialSharingFun.clickonEmailButtonFromPlayer();

				// Verify Email sharing pop up window is displayed
				assertTrue(
						"Email sharing pop up window is not displayed after clicking on Email button",
						CommonFun.isElementPresent(driver, By
								.xpath(XpathObjectRepo.emailSharingForm_XPATH)));

				log.info("Email sharing pop up window is displayed after clicking on Email button");

				// Verify close button

				assertTrue(
						"Close button is not displaying email pop up window",
						CommonFun.isElementPresent(
								driver,
								By.xpath(XpathObjectRepo.emailPopupClosoButton_XPATH)));
				log.info("Close button is displaying email pop up window");

				// Click On Close icon from email sharing window
				SocialSharingFun.clickonEmailFormCloseIcon();

				// Verify Email sharing form is closed successfully
				assertFalse(
						"Email sharing Form is not closed",
						driver.findElement(
								By.xpath(XpathObjectRepo.emailSharingForm_XPATH))
								.isDisplayed());
				log.info("Email sharing Form is closed");

				log.info("");

			} else {
				log.error("Featured video section does not contain videos");
				log.info("");
			}

		} catch (Throwable t) {
			captureScreenshot();
			collector.addError(t);
		}
	}

}
