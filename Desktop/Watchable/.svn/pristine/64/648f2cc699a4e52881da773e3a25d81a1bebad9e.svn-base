package comcast.test.app.testCases.signUp;

import static org.junit.Assert.*;
import org.junit.Test;
import org.openqa.selenium.By;
import comcast.test.app.common.XpathObjectRepo;
import comcast.test.app.common.AssertionRepo.common.AssertionRepoFunctions;
import comcast.test.app.common.commonFunctions.CommonFun;
import comcast.test.app.testCases.signUp.signUpFunctions.SignUpFun;
import comcast.test.config.configServices.DataServiceProperties;
import comcast.test.config.configServices.utils.BaseTest;

/**
 * Class Name: VerifyCaptchaPrivacyLink Description: This test case verifies the
 * The captcha Privacy link in captcha container is clickable in sign up form Author: Manoj
 * **/

public class VerifyCaptchaPrivacyLink extends BaseTest {

	AssertionRepoFunctions assertionFunction = new AssertionRepoFunctions();

	@Test
	public void testVerifyCaptchaPrivacyLink() throws Exception {

		try {

			log.info("Script: VerifyCaptchaPrivacyLink");
			log.info("******************************");

			// Navigate to the Home page of the application
			driver.get(DataServiceProperties.HOMEAPPURL);

			// Verify application is opened successfully.
			AssertionRepoFunctions.assertWatchableTitle();
			log.info("Successfully opened the application");

			// Click on Sign UP button from header menu
			SignUpFun.clickOnSignUpButton();

			// Verify sign up form opened successfully
			assertTrue(
					"Sign Up form is not opened",
					CommonFun.isElementPresent(driver,
							By.xpath(XpathObjectRepo.signUpForm_XPATH)));
			log.info("Sign Up form opened successfully");

			// Verify captcha container present in login form

			
			assertTrue(
					"Captcha image is not present in Sign Up form",
					CommonFun.isElementPresent(
							driver,
							By.xpath(XpathObjectRepo.signUpFormCaptchaImage_XPATH)));
			log.info("Captcha image is present in Sign Up form");
			
			driver.switchTo().frame(4);


			// Verify captcha Privacy link is present in captcha container
			assertTrue(
					"Captcha Privacy link is not present in captcha container",
					CommonFun.isElementPresent(driver, By
							.xpath(XpathObjectRepo.recaptchaPrivacyLink_XPATH)));
			log.info("Captcha Privacy link is present in captcha container");

			// Verify Captcha Privacy link is clickable
			boolean match = true;

			CommonFun.isElementClickable(driver.findElement(By
					.xpath(XpathObjectRepo.recaptchaPrivacyLink_XPATH)),
					"Captcha Privacy link", true);

			log.info(match);
			assertTrue("The Captcha Privacy linkis not clickable", match);

			log.info("The Captcha Privacy link is clickable");

			// Click onCaptcha Privacy link

			//HomeFun.clickOnCaptchaPrivacyLink();

			driver.switchTo().defaultContent();

			// Close the Sign Up form
			SignUpFun.clickOnSignUpFormCloseIcon();

			// Verify Sign Up form is closed successfully
			assertFalse(
					"Sign Up Form is not closed",
					driver.findElement(
							By.xpath(XpathObjectRepo.signUpForm_XPATH))
							.isDisplayed());
			log.info("Sign Up form is closed");

			log.info("");

		} catch (Throwable t) {
			captureScreenshot();
			collector.addError(t);
		}
	}
}