package comcast.test.app.testCases.search;

import static org.junit.Assert.assertTrue;

import org.junit.Test;
import org.openqa.selenium.By;

import comcast.test.app.common.UILablesRepo;
import comcast.test.app.common.XpathObjectRepo;
import comcast.test.app.common.AssertionRepo.common.AssertionRepoFunctions;
import comcast.test.app.common.commonFunctions.CommonFun;
import comcast.test.app.common.videoManagement.homePage.common.HomePageCommonFunctions;
import comcast.test.app.testCases.search.searchFunctions.searchFun;
import comcast.test.config.configServices.DataServiceProperties;
import comcast.test.config.configServices.utils.BaseTest;

/**
 * Class Name: VerifySearchResultPageContentWithOutResult Description: This test
 * case verifies the contents (Objects) of provider detail page when there are
 * no search results.Author: Manoj
 * **/

public class VerifySearchResultPageContentWithOutResult extends BaseTest {

	AssertionRepoFunctions assertionFunction = new AssertionRepoFunctions();

	@Test
	public void testVerifySearchResultPageContentWithOutResult()
			throws Exception {

		try {

			log.info("Script: VerifySearchResultPageContentWithOutResult");
			log.info("**************************************************");
			// Navigate to the Home page of the application
			driver.get(DataServiceProperties.HOMEAPPURL);

			// Verify application is opened successfully.
			AssertionRepoFunctions.assertWatchableTitle();
			log.info("Successfully opened the application");

			// Verifying Search icon(button) is present in header
			Thread.sleep(LessSleepTime);
			assertTrue(
					"Search icon(button) is not present in header",
					CommonFun.isElementPresent(driver,
							By.xpath(XpathObjectRepo.searchButton_XPATH)));
			log.info("Search icon(button) is present in header");
			
			// Click on Search icon to make search text box visible
			searchFun.clickOnSearchButton();

			// Verifying Search text box is present in header
			Thread.sleep(LessSleepTime);
			assertTrue(
					"Search text box is not present in header",
					CommonFun.isElementPresent(driver,
							By.xpath(XpathObjectRepo.searchText_XPATH)));
			log.info("Search text box is present in header");

			// Enter search text and press enter key
			searchFun
					.enterSearchStringPressEnterKey(UILablesRepo.SEARCH_INVALID_KEY);

			int noSearchResult = driver.findElements(
					By.xpath(XpathObjectRepo.searchNoResultTitle_XPATH)).size();

			if (noSearchResult > 0) {
				HomePageCommonFunctions.scrollToVideoResultMsgSection();
				// Verify No result message
				assertTrue(
						"No result message is not displayed",
						CommonFun.isElementPresent(
								driver,
								By.xpath(XpathObjectRepo.searchNoResultTitle_XPATH)));
				log.info(driver.findElement(
						By.xpath(XpathObjectRepo.searchNoResultTitle_XPATH))
						.getText());

				// Verify back to home page link is displayed
				assertTrue(
						"Back to home page link is not displayed when no search result",
						CommonFun.isElementPresent(
								driver,
								By.xpath(XpathObjectRepo.searchNoResultHomeLink_XPATH)));
				log.info("Back to home page link displayed when no search result");

				// Verify Popular videos title displayed when no search result
				assertTrue(
						"Popular videos title not displayed when no search result",
						CommonFun.isElementPresent(
								driver,
								By.xpath(XpathObjectRepo.searchNoResultPopulaVideoTitle_XPATH)));
				log.info("Popular videos Title '"
						+ driver.findElement(
								By.xpath(XpathObjectRepo.searchNoResultPopulaVideoTitle_XPATH))
								.getText()
						+ "' displayed when no search result");

				// Verify Popular videos are displayed when no search result
				assertTrue(
						"Popular videos are not displayed when no search result",
						CommonFun.isElementPresent(
								driver,
								By.xpath(XpathObjectRepo.searchResultTPopularVideosRow_XPATH)));
				log.info("Popular videos are displayed when no search result");

				log.info("");
			}
		} catch (Throwable t) {
			captureScreenshot();
			collector.addError(t);
		}

	}
}
